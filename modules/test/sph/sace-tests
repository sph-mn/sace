(sace-compile
      (user ("at least" (2) (has s) (can l)))
      ("at least 2 user has s." "at least 2 user can l.")
      (user ("exactly" (1) (that a) (has s) (can l)))
      ("exactly 1 user that a has s." "exactly 1 user that a can l.")
      (x (iff (is y) (has z))) "x is y if and only if has z."
      ("a is b") "a is b."
      (a (is b)) "a is b."
      (a (is c (from x) (to y))) "a is c from x to y."
      (a (is ("all of" (b) (c)))) "a is b and c."
      (a (is ("any of" (b) (c)))) "a is b or c."
      (a (is (either (b) (c)))) "a is either b or c."
      (a (is (not (b) (c)))) "a is not b and c."
      (a (p) (and (q))) ("a p." "a and q.")
      (a (o (is p))) "the o of a is p."
      (a (o ("can be" ("any of" (b) (c))))) "the o of a can be b or c."
      (a (if ("any of" (b) (c)) (then d))) "if b or c then a d."
      (a (if ("all of" (b) (c)) (then (is d)) (else (is e)))) "if b and c then a is d else a is e."
      (who (is ("any of" a b))) "who is a or b?")